uniform sampler2D normalMap;
uniform sampler2D tex;
uniform sampler2DShadow ShadowMap;
varying vec4 ShadowCoord; // pos in shadow space
varying vec3 lightDir; // in tangent space
varying vec3 normal; // in eye space

// Fragment shader
void main()
{
    vec3 n = normalize(texture2D(normalMap, gl_TexCoord[0].st).xyz * 2.0 - 1.0);
    vec3 l = normalize(lightDir);
    float nDotL = max(0.0, dot(n, l));

    float shadow = shadow2DProj(ShadowMap, ShadowCoord).r;

    // gl_FragColor = texture2D(tex, gl_TexCoord[0].st);
    gl_FragColor = (0.5 + shadow*nDotL*0.5) * texture2D(tex, gl_TexCoord[0].st);
}

