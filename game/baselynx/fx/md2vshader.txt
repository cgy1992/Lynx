varying vec3 lightDir;
varying vec3 normal;
varying vec3 eyedir;

// MD2 interpolation
uniform float interp; // lerp factor of model

// Vertex shader
void main()
{
    normal = normalize(gl_NormalMatrix * gl_Normal);

    vec4 lerpvertex; // lerped vertex between current frame and next frame
    lerpvertex.xyz = gl_Vertex.xyz + gl_MultiTexCoord2.xyz*interp;
    lerpvertex.w = 1.0;
    gl_Position = gl_ModelViewProjectionMatrix * lerpvertex;

    // Texture coordinates for base texture
    gl_TexCoord[0] = gl_TextureMatrix[0] * gl_MultiTexCoord0; // base texture

    // transform light to eye space
    vec4 lightpos = gl_ModelViewMatrix * gl_LightSource[0].position;
    lightDir = lightpos.xyz; // lightdir in eye space
    eyedir = -lerpvertex.xyz;
}

