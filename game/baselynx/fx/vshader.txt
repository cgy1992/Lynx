varying vec4 ShadowCoord;
varying vec3 lightDir;
varying vec3 normal;
varying vec3 eyedir;

// Vertex shader
void main()
{
    vec4 vPos = gl_ModelViewMatrix * gl_Vertex; // transform to eye-space
    gl_Position = ftransform();

    ShadowCoord = gl_TextureMatrix[7] * gl_Vertex; // position in shadow space
    gl_TexCoord[0] = gl_TextureMatrix[0] * gl_MultiTexCoord0;

    vec3 n = normalize(gl_NormalMatrix * gl_Normal); // use gl_NormalMatrix * to transform to eye-space
    vec3 t = normalize(gl_NormalMatrix * gl_MultiTexCoord1.xyz);
    vec3 b = cross(n, t) * gl_MultiTexCoord1.w;

    // obj space to tangent space matrix
    mat3 tbnMatrix = mat3(t.x, b.x, n.x,
                          t.y, b.y, n.y,
                          t.z, b.z, n.z);

    // light position to eye space
    // vec4 lightpos = gl_ModelViewMatrix * gl_LightSource[0].position;
    lightDir = - vPos.xyz;
    lightDir = tbnMatrix * lightDir; // light dir in tangent space
    normal = n;
    eyedir = -vPos.xyz;
}

